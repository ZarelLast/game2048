{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","Score","BestScore","array","status","colorsAndSizes","size","color","componentDidMount","setup","document","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","isGameOver","i","j","isGameWon","event","localStorage","getItem","setState","canvas","getElementById","ctx","getContext","drawCanvas","addNumber","updateCanvas","width","height","grid","drawGrid","w","beginPath","rect","fillStyle","strokeStyle","stroke","fill","closePath","val","len","length","textAlign","font","fillText","options","push","x","y","spot","Math","floor","random","r","slide","row","arr","filter","missing","Array","concat","combine","a","b","copyArray","past","compareGrid","flipGrid","reverse","rotateGrid","newGrid","flipped","rotated","played","keyCode","operate","changed","saveData","score","parseInt","setItem","className","this","id","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e34ac9c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    Score: 0,\n    BestScore: 0,\n    array: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    status: \" \",\n    colorsAndSizes: {\n      \"2\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"4\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"8\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"16\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"32\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"64\": {\n        size: 52,\n        color: \"#000000\"\n      },\n      \"128\": {\n        size: 48,\n        color: \"#000000\"\n      },\n      \"256\": {\n        size: 48,\n        color: \"#000000\"\n      },\n      \"512\": {\n        size: 40,\n        color: \"#000000\"\n      },\n    }\n  };\n\n  componentDidMount = () => {\n    this.setup();\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  };\n\n  isGameOver = () => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state.array[i][j] == 0) {\n          return false;\n        }\n        if (i !== 3 && this.state.array[i][j] === this.state.array[i + 1][j]) {\n          return false;\n        }\n        if (j !== 3 && this.state.array[i][j] === this.state.array[i][j + 1]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  isGameWon = () => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state.array[i][j] == 512) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  setup = event => {\n    var BestScore = localStorage.getItem('Best Score');\n    this.setState({ BestScore: BestScore });\n    var canvas = document.getElementById(\"myCanvas\");\n    var ctx = canvas.getContext(\"2d\");\n    this.drawCanvas(canvas);\n    this.addNumber(this.state.array);\n    this.addNumber(this.state.array);\n    this.updateCanvas(ctx, this.state.array);\n\n    let gameover = this.isGameOver();\n    if (gameover) {\n      this.setState({\n        status: \"GAME OVER\"\n      });\n    }\n    let gamewon = this.isGameWon();\n    if (gamewon) {\n      this.setState({\n        status: \"You Won !\"\n      });\n    }\n  };\n\n  drawCanvas = canvas => {\n    canvas.width = 400;\n    canvas.height = 400;\n  };\n\n  updateCanvas = (ctx, grid) => {\n    this.drawGrid(ctx, grid);\n  };\n\n  drawGrid = (ctx, grid) => {\n    let w = 100;\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        ctx.beginPath();\n        ctx.rect(i * w, j * w, w, w);\n        ctx.fillStyle = \"#e0e0e0\";\n        ctx.strokeStyle = \"#000\";\n        ctx.stroke();\n        ctx.fill();\n        ctx.closePath();\n        let val = grid[i][j];\n        if (grid[i][j] !== 0) {\n          let s = \"\" + val;\n          let len = s.length - 1;\n          let sizes = [52, 52, 48, 40];\n          ctx.textAlign = \"center\";\n          ctx.fillStyle = \"#000\";\n          ctx.font = sizes[len] + \"px Comic Sans MS\";\n          ctx.fillText(val, i * w + w / 2, (j + 1) * w - w / 3);\n        }\n      }\n    }\n  };\n\n  addNumber = grid => {\n    let options = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          options.push({\n            x: i,\n            y: j\n          });\n        }\n      }\n    }\n    if (options.length > 0) {\n      let spot = options[Math.floor(Math.random() * options.length)];\n      let r = Math.random(1);\n      grid[spot.x][spot.y] = r > 0.5 ? 2 : 4;\n    }\n  };\n\n  slide = row => {\n    let arr = row.filter(val => val);\n    let missing = 4 - arr.length;\n    let zeros = Array(missing).fill(0);\n    arr = zeros.concat(arr);\n    return arr;\n  };\n\n  combine = row => {\n    for (let i = 3; i >= 1; i--) {\n      let a = row[i];\n      let b = row[i - 1];\n      if (a == b) {\n        row[i] = a + b;\n        this.setState({\n          Score: this.state.Score + row[i]\n        });\n        row[i - 1] = 0;\n      }\n    }\n    return row;\n  };\n\n  copyArray = grid => {\n    let past = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        past[i][j] = grid[i][j];\n      }\n    }\n    return past;\n  };\n\n  compareGrid = (a, b) => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (a[i][j] !== b[i][j]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  flipGrid = grid => {\n    for (let i = 0; i < 4; i++) {\n      grid[i].reverse();\n    }\n  };\n\n  rotateGrid = grid => {\n    let newGrid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        newGrid[i][j] = grid[j][i];\n      }\n    }\n    return newGrid;\n  };\n\n  handleKeyPress = event => {\n    let flipped = false;\n    let rotated = false;\n    let played = true;\n    var canvas = document.getElementById(\"myCanvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    if (event.keyCode === 40) {\n      // Do Nothing\n    } else if (event.keyCode === 38) {\n      this.flipGrid(this.state.array);\n      flipped = true;\n    } else if (event.keyCode === 39) {\n      this.setState({ array: this.rotateGrid(this.state.array) });\n      rotated = true;\n    } else if (event.keyCode === 37) {\n      this.setState({ array: this.rotateGrid(this.state.array) });\n      this.flipGrid(this.state.array);\n      rotated = true;\n      flipped = true;\n    } else {\n      played = false;\n    }\n\n    if (played) {\n      let past = this.copyArray(this.state.array);\n      for (let i = 0; i < 4; i++) {\n        this.state.array[i] = this.operate(this.state.array[i]);\n      }\n\n      let changed = this.compareGrid(past, this.state.array);\n\n      if (flipped) {\n        this.flipGrid(this.state.array);\n      }\n\n      if (rotated) {\n        this.setState({ array: this.rotateGrid(this.state.array) });\n        this.setState({ array: this.rotateGrid(this.state.array) });\n        this.setState({ array: this.rotateGrid(this.state.array) });\n      }\n\n      if (changed) {\n        this.addNumber(this.state.array);\n      }\n\n      this.updateCanvas(ctx, this.state.array);\n\n      let gameover = this.isGameOver();\n      if (gameover) {\n        this.setState({\n          status: \"GAME OVER\"\n        });\n      }\n      let gamewon = this.isGameWon();\n      if (gamewon) {\n        this.setState({\n          status: \"You Won !\"\n        });\n      }\n      this.saveData();\n    }\n  };\n\n  operate = row => {\n    row = this.slide(row);\n    row = this.combine(row);\n    row = this.slide(row);\n    return row;\n  };\n\n  saveData = () => {\n    var score = parseInt(this.state.Score);\n    localStorage.setItem(\"Score\", score);\n    var BestScore = localStorage.getItem('Best Score');\n    this.setState({ Score: score, BestScore: BestScore });\n    if (score > BestScore) {\n      this.setState({ BestScore: score });\n      localStorage.setItem(\"Best Score\", score);\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div>\n            <h5>Score</h5>\n            <h1>{this.state.Score}</h1>\n          </div>\n          <div>\n            <h5>Best Score</h5>\n            <h1>{this.state.BestScore}</h1>\n          </div>\n        </div>\n        <canvas id=\"myCanvas\"></canvas>\n        <div className=\"GameOver\">\n          <h1 className=\"over-title\">{this.state.status}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}