{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","Score","BestScore","point","array","new_array","status","colorsSizes","size","color","componentDidMount","setup","document","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","newGame","event","preventDefault","ctx","getElementById","getContext","setState","updateCanvas","isGameOver","i","j","isGameWon","localStorage","getItem","canvas","drawCanvas","addNumber","width","height","grid","new_grid","drawGrid","w","config","val","s","toString","setTimeout","beginPath","rect","fillStyle","lineWidth","strokeStyle","stroke","fill","closePath","textAlign","font","fillText","options","push","x","y","length","spot","Math","floor","random","r","slide","row","arr","filter","missing","Array","concat","combine","a","b","copyArray","past","compareGrid","flipGrid","reverse","rotateGrid","newGrid","flipped","rotated","played","keyCode","operate","changed","saveData","score","parseInt","setItem","className","this","id","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3901ebc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    Score: 0,\n    BestScore: 0,\n    point: \"\",\n    array: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    new_array: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    status: \" \",\n    colorsSizes: {\n      \"2\": {\n        size: 52,\n        color: \"#F35956\"\n      },\n      \"4\": {\n        size: 52,\n        color: \"#F35956\"\n      },\n      \"8\": {\n        size: 52,\n        color: \"#F35956\"\n      },\n      \"16\": {\n        size: 52,\n        color: \"#9659A7\"\n      },\n      \"32\": {\n        size: 52,\n        color: \"#9659A7\"\n      },\n      \"64\": {\n        size: 52,\n        color: \"#2494C1\"\n      },\n      \"128\": {\n        size: 48,\n        color: \"#2494C1\"\n      },\n      \"256\": {\n        size: 48,\n        color: \"#F1C500\"\n      },\n      \"512\": {\n        size: 40,\n        color: \"#F1C500\"\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    this.setup();\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  };\n\n  newGame = event => {\n    event.preventDefault();\n    var canvas = document.getElementById(\"myCanvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    this.setState(\n      {\n        array: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n        new_array: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n        Score: 0,\n        status: \"\"\n      },\n      () => {\n        this.updateCanvas(ctx, this.state.array, this.state.new_array);\n        this.setup();\n      }\n    );\n  };\n\n  isGameOver = () => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state.array[i][j] == 0) {\n          return false;\n        }\n        if (i !== 3 && this.state.array[i][j] === this.state.array[i + 1][j]) {\n          return false;\n        }\n        if (j !== 3 && this.state.array[i][j] === this.state.array[i][j + 1]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  isGameWon = () => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state.array[i][j] == 512) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  setup = event => {\n    var BestScore = localStorage.getItem(\"Best Score\");\n    this.setState({ BestScore: BestScore });\n    var canvas = document.getElementById(\"myCanvas\");\n    var ctx = canvas.getContext(\"2d\");\n    this.drawCanvas(canvas);\n    this.addNumber(this.state.array, this.state.new_array);\n    this.addNumber(this.state.array, this.state.new_array);\n    this.updateCanvas(ctx, this.state.array, this.state.new_array);\n\n    let gameover = this.isGameOver();\n    if (gameover) {\n      this.setState({\n        status: \"GAME OVER\"\n      });\n    }\n    let gamewon = this.isGameWon();\n    if (gamewon) {\n      this.setState({\n        status: \"You Won !\"\n      });\n    }\n  };\n\n  drawCanvas = canvas => {\n    canvas.width = 400;\n    canvas.height = 400;\n  };\n\n  updateCanvas = (ctx, grid, new_grid) => {\n    this.drawGrid(ctx, grid, new_grid);\n  };\n\n  drawGrid = (ctx, grid, new_grid) => {\n    let w = 100;\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        let config = this.state.colorsSizes;\n        let val = grid[i][j];\n        let s = val.toString();\n        if (new_grid[i][j] === 1) {\n          setTimeout(function() {}, 100, config);\n          new_grid[i][j] = 0;\n        }\n        ctx.beginPath();\n        ctx.rect(i * w, j * w, w, w);\n        if (val != 0) {\n          ctx.fillStyle = config[s].color;\n        } else {\n          ctx.fillStyle = \"#fff\";\n        }\n        ctx.lineWidth = 15;\n        ctx.strokeStyle = \"#e0e0e0\";\n        ctx.stroke();\n        ctx.fill();\n        ctx.closePath();\n        if (grid[i][j] !== 0) {\n          ctx.textAlign = \"center\";\n          ctx.fillStyle = \"#fff\";\n          ctx.font = config[s].size + \"px Comic Sans MS\";\n          ctx.fillText(val, i * w + w / 2, (j + 1) * w - w / 3);\n        }\n      }\n    }\n  };\n\n  addNumber = (grid, new_grid) => {\n    let options = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          options.push({\n            x: i,\n            y: j\n          });\n        }\n      }\n    }\n    if (options.length > 0) {\n      let spot = options[Math.floor(Math.random() * options.length)];\n      let r = Math.random(1);\n      grid[spot.x][spot.y] = r > 0.2 ? 2 : 4;\n      new_grid[spot.x][spot.y] = 1;\n    }\n  };\n\n  slide = row => {\n    let arr = row.filter(val => val);\n    let missing = 4 - arr.length;\n    let zeros = Array(missing).fill(0);\n    arr = zeros.concat(arr);\n    return arr;\n  };\n\n  combine = row => {\n    for (let i = 3; i >= 1; i--) {\n      let a = row[i];\n      let b = row[i - 1];\n      if (a == b) {\n        row[i] = a + b;\n        this.setState({\n          Score: this.state.Score + row[i]\n        });\n        if (row[i] != 0) {\n          this.setState(\n            {\n              point: \" + \" + row[i]\n            },\n            () => {\n              setTimeout(() => {\n                this.setState({\n                  point: \"\"\n                });\n              }, 200);\n            }\n          );\n        }\n        row[i - 1] = 0;\n      }\n    }\n    return row;\n  };\n\n  copyArray = grid => {\n    let past = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        past[i][j] = grid[i][j];\n      }\n    }\n    return past;\n  };\n\n  compareGrid = (a, b) => {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (a[i][j] !== b[i][j]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  flipGrid = grid => {\n    for (let i = 0; i < 4; i++) {\n      grid[i].reverse();\n    }\n  };\n\n  rotateGrid = grid => {\n    let newGrid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        newGrid[i][j] = grid[j][i];\n      }\n    }\n    return newGrid;\n  };\n\n  handleKeyPress = event => {\n    let flipped = false;\n    let rotated = false;\n    let played = true;\n    var canvas = document.getElementById(\"myCanvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    if (event.keyCode === 40) {\n      // Do Nothing\n    } else if (event.keyCode === 38) {\n      this.flipGrid(this.state.array);\n      flipped = true;\n    } else if (event.keyCode === 39) {\n      this.setState({ array: this.rotateGrid(this.state.array) });\n      rotated = true;\n    } else if (event.keyCode === 37) {\n      this.setState({ array: this.rotateGrid(this.state.array) });\n      this.flipGrid(this.state.array);\n      rotated = true;\n      flipped = true;\n    } else {\n      played = false;\n    }\n\n    if (played) {\n      let past = this.copyArray(this.state.array);\n      for (let i = 0; i < 4; i++) {\n        this.state.array[i] = this.operate(this.state.array[i]);\n      }\n\n      let changed = this.compareGrid(past, this.state.array);\n\n      if (flipped) {\n        this.flipGrid(this.state.array);\n      }\n\n      if (rotated) {\n        this.setState({ array: this.rotateGrid(this.state.array) });\n        this.setState({ array: this.rotateGrid(this.state.array) });\n        this.setState({ array: this.rotateGrid(this.state.array) });\n      }\n\n      if (changed) {\n        this.addNumber(this.state.array, this.state.new_array);\n      }\n\n      this.updateCanvas(ctx, this.state.array, this.state.new_array);\n\n      let gameover = this.isGameOver();\n      if (gameover) {\n        this.setState({\n          status: \"GAME OVER\"\n        });\n      }\n      let gamewon = this.isGameWon();\n      if (gamewon) {\n        this.setState({\n          status: \"You Won !\"\n        });\n      }\n\n      this.saveData();\n    }\n  };\n\n  operate = row => {\n    row = this.slide(row);\n    row = this.combine(row);\n    row = this.slide(row);\n    return row;\n  };\n\n  saveData = () => {\n    var score = parseInt(this.state.Score);\n    localStorage.setItem(\"Score\", score);\n    var BestScore = localStorage.getItem(\"Best Score\");\n    this.setState({ Score: score, BestScore: BestScore });\n    if (score > BestScore) {\n      this.setState({ BestScore: score });\n      localStorage.setItem(\"Best Score\", score);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"Container\">\n          <div className=\"row\">\n            <div>\n              <h5>Score</h5>\n              <h1>\n                {this.state.Score} {this.state.point}\n              </h1>\n            </div>\n            <div>\n              <h5>Best Score</h5>\n              <h1>{this.state.BestScore}</h1>\n            </div>\n          </div>\n          <canvas id=\"myCanvas\"></canvas>\n          <div>\n            <button onClick={this.newGame}>New Game</button>\n          </div>\n          <div className=\"GameOver\">\n            <h1 className=\"over-title\">{this.state.status}</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}